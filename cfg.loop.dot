digraph "CFG for 'loop' function" {
	label="CFG for 'loop' function";

	Node0x4684b80 [shape=record,label="{entry:\l  %n.addr = alloca i32, align 4\l  %i = alloca i32, align 4\l  store i32 %n, i32* %n.addr, align 4\l  store i32 0, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x4684b80 -> Node0x46854f0;
	Node0x46854f0 [shape=record,label="{for.cond:                                         \l  %0 = load i32, i32* %i, align 4\l  %1 = load i32, i32* %n.addr, align 4\l  %cmp = icmp slt i32 %0, %1\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x46854f0:s0 -> Node0x46857c0;
	Node0x46854f0:s1 -> Node0x4685880;
	Node0x46857c0 [shape=record,label="{for.body:                                         \l  %2 = load i32, i32* %i, align 4\l  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4\l... x i8]* @.str, i32 0, i32 0), i32 %2)\l  br label %for.inc\l}"];
	Node0x46857c0 -> Node0x4686140;
	Node0x4686140 [shape=record,label="{for.inc:                                          \l  %3 = load i32, i32* %i, align 4\l  %inc = add nsw i32 %3, 1\l  store i32 %inc, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x4686140 -> Node0x46854f0;
	Node0x4685880 [shape=record,label="{for.end:                                          \l  ret i32 0\l}"];
}
